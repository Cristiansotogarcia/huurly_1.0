[
  {
    "id": "TC001",
    "title": "Tenant Registration with Valid Data",
    "description": "Verify that a tenant can successfully complete the multi-step registration including role selection, form validation, email verification, and final submission.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the multi-step signup form."
      },
      {
        "type": "action",
        "description": "Select 'Tenant' role."
      },
      {
        "type": "action",
        "description": "Fill out all required fields in each step with valid data including password and email."
      },
      {
        "type": "action",
        "description": "Upload required documents for verification."
      },
      {
        "type": "action",
        "description": "Submit registration and verify email by clicking the link sent."
      },
      {
        "type": "assertion",
        "description": "Confirm registration completion and tenant profile creation."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Tenant Registration with Invalid Email Format",
    "description": "Verify that registration fails gracefully when an invalid email format is entered during signup.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the multi-step signup form and select 'Tenant'."
      },
      {
        "type": "action",
        "description": "Enter an invalid email address format in the email field."
      },
      {
        "type": "action",
        "description": "Fill the rest of the required fields correctly."
      },
      {
        "type": "action",
        "description": "Attempt to proceed to the next step or submit the form."
      },
      {
        "type": "assertion",
        "description": "Verify the form shows a proper validation error message and blocks progression."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Tenant Profile Creation with Missing Required Document",
    "description": "Verify that the tenant profile creation process does not complete if required verification documents are missing.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as Tenant and navigate to profile creation modal."
      },
      {
        "type": "action",
        "description": "Fill all profile fields except upload of required document."
      },
      {
        "type": "action",
        "description": "Attempt to submit the profile creation form."
      },
      {
        "type": "assertion",
        "description": "Verify the process is blocked and a clear validation error is shown regarding missing documents."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Landlord Advanced Tenant Search with Filters",
    "description": "Verify that landlord can successfully use advanced search filters to find tenants and results respect filters and sort order.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as Landlord and navigate to the tenant search interface."
      },
      {
        "type": "action",
        "description": "Apply various combinations of filters such as location, profile details, and verification status."
      },
      {
        "type": "action",
        "description": "Apply different sort orders on the results."
      },
      {
        "type": "assertion",
        "description": "Verify the search results are filtered correctly, sorted as selected, and tenant profiles display expected data."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Landlord Sends Invitation to Tenant Successfully",
    "description": "Verify landlord can invite a tenant for property viewing from search results and tenant receives notification.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as Landlord and search for tenants."
      },
      {
        "type": "action",
        "description": "Select a tenant and send a viewing invitation."
      },
      {
        "type": "assertion",
        "description": "Verify the invitation is recorded in system and tenant user receives real-time notification."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Document Verification Workflow by Reviewer",
    "description": "Verify that reviewers can view tenant uploaded documents, approve or reject them, which triggers appropriate notifications and GDPR-compliant deletion of documents after processing.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as Reviewer and open document review dashboard."
      },
      {
        "type": "action",
        "description": "Access tenant's uploaded documents queue."
      },
      {
        "type": "action",
        "description": "Approve a valid document."
      },
      {
        "type": "assertion",
        "description": "Check that the tenant is notified of approval and the document is deleted from storage as per GDPR."
      },
      {
        "type": "action",
        "description": "Reject an invalid document."
      },
      {
        "type": "assertion",
        "description": "Verify tenant is notified of rejection and document is deleted promptly."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Subscription Payment Processing via Stripe",
    "description": "Verify that tenants subscribing via Stripe have payment processed, subscription status updated, and dashboard reflects active status.",
    "category": "integration",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as Tenant and navigate to subscription payment."
      },
      {
        "type": "action",
        "description": "Complete Stripe payment flow with valid payment details."
      },
      {
        "type": "assertion",
        "description": "Verify payment webhook is handled, subscription status updates to active, and tenant dashboard shows updated subscription info."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Role-Based Access Control Enforcement",
    "description": "Test that users with specific roles cannot access unauthorized dashboards or actions, ensuring proper access control is enforced.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as Tenant and attempt to access Admin dashboard URL directly."
      },
      {
        "type": "assertion",
        "description": "Verify access is denied and user is redirected or shown an access denied message."
      },
      {
        "type": "action",
        "description": "Login as Landlord and attempt to perform reviewer-only actions."
      },
      {
        "type": "assertion",
        "description": "Verify action is blocked and an appropriate error is shown."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Admin Dashboard User Management",
    "description": "Verify that Admin can manage user accounts including viewing, editing roles, and disabling users correctly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as Admin and open user management section."
      },
      {
        "type": "action",
        "description": "Search for users by role and status."
      },
      {
        "type": "action",
        "description": "Edit a user's role and save changes."
      },
      {
        "type": "assertion",
        "description": "Verify that changes are persisted and reflected in user role assignments."
      },
      {
        "type": "action",
        "description": "Disable a user account."
      },
      {
        "type": "assertion",
        "description": "Ensure the user is unable to login afterwards."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Mobile Responsiveness and Localization",
    "description": "Verify that the platform UI renders correctly on various mobile device screen sizes and that all interface text and error messages appear fully localized in Dutch.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access the platform using mobile viewport sizes on multiple devices."
      },
      {
        "type": "assertion",
        "description": "Verify layout adapts correctly with no visual glitches or unusable UI elements."
      },
      {
        "type": "assertion",
        "description": "Check all visible text, labels, and error messages are in Dutch."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Real-time Notifications Delivery and Preferences",
    "description": "Verify that all user roles receive relevant real-time notifications and that users can adjust notification preferences which take effect immediately.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger events that should generate notifications for each role (e.g., invitation sent, document approved)."
      },
      {
        "type": "assertion",
        "description": "Verify real-time notifications appear in the UI notification center."
      },
      {
        "type": "action",
        "description": "Update user notification preferences and disable certain notification types."
      },
      {
        "type": "action",
        "description": "Trigger those notification events again."
      },
      {
        "type": "assertion",
        "description": "Confirm disabled notifications no longer appear for the user."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Input Validation and Security for File Uploads",
    "description": "Verify that document upload features accept only allowed file types and sizes, handle invalid files gracefully, and sanitize inputs to prevent security vulnerabilities.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to upload various file types including allowed formats and disallowed ones like executables."
      },
      {
        "type": "assertion",
        "description": "Ensure disallowed files are rejected with clear error messages."
      },
      {
        "type": "action",
        "description": "Attempt to upload files exceeding size limits."
      },
      {
        "type": "assertion",
        "description": "Verify uploads are blocked and relevant validation errors are shown."
      },
      {
        "type": "action",
        "description": "Inspect uploaded file metadata and payload for sanitization."
      },
      {
        "type": "assertion",
        "description": "Confirm inputs are sanitized to prevent injection or other security risks."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Performance Under Load",
    "description": "Verify that the platform can handle 10,000 concurrent users without performance degradation and meets load time thresholds as specified.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate 10,000 concurrent users performing typical workflows (login, search, profile update) using load testing tools."
      },
      {
        "type": "assertion",
        "description": "Monitor response times and error rates ensuring they meet performance criteria."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "JWT Token Validation and Secure Session Management",
    "description": "Verify that authentication uses valid JWT tokens, sessions expire appropriately, and invalid or tampered tokens are rejected.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login to receive JWT token and access protected resources."
      },
      {
        "type": "assertion",
        "description": "Verify access is granted with valid token."
      },
      {
        "type": "action",
        "description": "Manually tamper the JWT token or use expired token and attempt access."
      },
      {
        "type": "assertion",
        "description": "Verify access is denied and user is redirected to login."
      },
      {
        "type": "action",
        "description": "Logout to confirm session state is cleared and tokens are invalidated."
      },
      {
        "type": "assertion",
        "description": "Ensure protected pages cannot be accessed after logout."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Landlord Property Management CRUD Operations",
    "description": "Verify that landlords can create, read, update, and delete property listings successfully with real-time updates reflected.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as Landlord and navigate to property management interface."
      },
      {
        "type": "action",
        "description": "Create a new property listing with all required details."
      },
      {
        "type": "assertion",
        "description": "Verify new property appears correctly in property list."
      },
      {
        "type": "action",
        "description": "Update details of an existing property."
      },
      {
        "type": "assertion",
        "description": "Confirm updated details save and display correctly."
      },
      {
        "type": "action",
        "description": "Delete a property listing."
      },
      {
        "type": "assertion",
        "description": "Ensure property is removed from list and database."
      }
    ]
  }
]
