[
  {
    "projectId": "b563aaea-0d2b-4209-9ab9-cd9db63b3c41",
    "testId": "990ae26a-316b-4b74-bcaa-799f059be3a5",
    "userId": "943844f8-80a1-7029-44ab-95815de8baaa",
    "title": "TC002-Profile Creation Step Validation",
    "description": "Verify that each step of the multi-step tenant profile creation wizard validates inputs correctly.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:8080\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        # Click on 'Profiel aanmaken' button to open the multi-step profile creation modal.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div/div[2]/section/div/div/div/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Attempt to proceed to next step with incomplete data to verify validation.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div[3]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Fill valid data for 'Voornaam' and 'Achternaam' fields and proceed to next step.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('John')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('Doe')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div[3]/button').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Attempt to proceed with empty email and password fields to verify validation errors and blocking of navigation.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div[4]/button[2]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Test invalid email format and invalid password inputs to verify validation errors.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('invalid-email')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('pass')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div[3]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('pass')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div[4]/button[2]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        # Fill valid email and strong password meeting all criteria, confirm password, and proceed to next step to verify navigation is allowed.\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('sotocrioyo@gmail.com')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div[2]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('Admin1290@@')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div[3]/input').nth(0)\n        await page.wait_for_timeout(3000); await elem.fill('Admin1290@@')\n        \n\n        frame = context.pages[-1]\n        elem = frame.locator('xpath=html/body/div[3]/form/div[4]/button[2]').nth(0)\n        await page.wait_for_timeout(3000); await elem.click(timeout=5000)\n        \n\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Testing of the multi-step tenant profile creation wizard validation was halted at step 2 due to a blocking issue where valid inputs did not allow progression. Validation on step 1 was successful, but step 2 form submission did not navigate forward or show success. Further testing cannot continue until this issue is resolved.\nBrowser Console Logs:\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:8080/node_modules/.vite/deps/react-router-dom.js?v=d94d6d55:4392:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:8080/node_modules/.vite/deps/react-router-dom.js?v=d94d6d55:4392:12)\n[WARNING] Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}. (at http://localhost:8080/node_modules/.vite/deps/@radix-ui_react-dialog.js?v=d94d6d55:342:35)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://sqhultitvpivlnlgogen.supabase.co/functions/v1/register-user:0:0)\n[ERROR] {time: 1753719840973, level: 50, msg: Profile creation error:} (at http://localhost:8080/node_modules/.vite/deps/pino.js?v=d94d6d55:385:18)\n[ERROR] Signup error: Error: Er is een onbekende fout opgetreden bij het registreren.\n    at handleSubmit (http://localhost:8080/src/components/auth/MultiStepSignupModal.tsx:121:23) (at http://localhost:8080/src/components/auth/MultiStepSignupModal.tsx:123:20)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/943844f8-80a1-7029-44ab-95815de8baaa/1753719983028972//tmp/test_task/result.webm",
    "created": "2025-07-28T16:21:15.548Z",
    "modified": "2025-07-28T16:26:23.206Z"
  }
]
