{
  "meta": {
    "project": "Huurly.nl",
    "version": "1.0.0",
    "date": "2025-07-13",
    "prepared_by": "Manus AI"
  },
  "product_overview": "Huurly.nl is a comprehensive Dutch rental platform connecting landlords and tenants through a unique reverse-search model, enabling tenants to create verified profiles that landlords can search to find suitable rental matches efficiently.",
  "core_goals": [
    "Simplify tenant search by enabling landlords to find tenants based on detailed profiles.",
    "Enhance trust via robust tenant profile verification processes.",
    "Streamline landlord tenant acquisition with efficient search and communication tools.",
    "Ensure data privacy and GDPR compliance especially for sensitive document handling.",
    "Foster a fair and efficient rental marketplace benefiting tenants and landlords.",
    "Deliver a robust MVP providing immediate value and validating the reverse-search rental model."
  ],
  "key_features": [
    "Multi-role system supporting tenants (Huurder), landlords (Verhuurder), reviewers (Beoordelaar), and admin.",
    "Tenant self-registration with multi-step profile creation including verification document uploads.",
    "Advanced tenant search and profile viewing for landlords with invitation and communication capabilities.",
    "Document verification workflow for reviewers with GDPR compliant immediate deletion post-verification.",
    "Subscription management for tenants via Stripe integration with payment and status tracking.",
    "Comprehensive admin dashboard for user management, analytics, SEO, mailing automation, and content management.",
    "Real-time notifications and in-app notification center tailored to user roles.",
    "Mobile-responsive, fully localized Dutch interface with a consistent design system.",
    "Robust authentication and role-based access control with secure session management."
  ],
  "user_flow_summary": [
    "Tenant self-registers via multi-step signup form, verifies email, creates a detailed profile with documents, and subscribes via Stripe.",
    "Landlord logs in, uses the advanced search interface to find tenants, views profiles, saves favorites, and sends viewing invitations or messages.",
    "Reviewer accesses the document review dashboard, inspects submitted documents, approves or rejects them, triggering notifications and GDPR-compliant deletion.",
    "Admin manages user accounts including landlords and reviewers, monitors platform analytics, manages SEO, email templates and automation workflows, and updates content dynamically.",
    "All roles receive real-time notifications relevant to their activities with controls for preferences and in-app message center."
  ],
  "validation_criteria": [
    "Tenant registration and profile creation must complete with validated multi-step forms and verified email.",
    "Subscription payments processed via Stripe must update subscription status accurately and reflect on tenant dashboard.",
    "Landlord tenant search filters must return correct and relevant tenant profiles sorted appropriately.",
    "Reviewer document approvals must trigger GDPR-compliant immediate deletion of documents and notify tenants accordingly.",
    "Role-based access control must prevent unauthorized access to restricted dashboards and actions.",
    "Admin dashboard must correctly display user management features, analytics metrics, SEO tools, and mailing capabilities.",
    "The platform must be fully functional on mobile devices with Dutch localization consistent across UI and error messages.",
    "Performance metrics meet load times under specified thresholds and handle 10,000 concurrent users without degradation.",
    "All security measures including RLS, JWT validation, input sanitization, and rate limiting must be implemented and effective."
  ],
  "code_summary": {
    "project_name": "Huurly",
    "description": "A comprehensive rental platform connecting landlords and tenants in the Dutch market with multi-role system, property management, application system, payment integration, and real-time notifications.",
    "tech_stack": {
      "frontend": {
        "framework": "React",
        "language": "TypeScript",
        "build_tool": "Vite",
        "styling": "Tailwind CSS",
        "ui_library": "Radix UI + shadcn/ui",
        "state_management": "Zustand",
        "routing": "React Router",
        "forms": "React Hook Form",
        "queries": "TanStack Query"
      },
      "backend": {
        "database": "Supabase (PostgreSQL)",
        "authentication": "Supabase Auth",
        "real_time": "Supabase Realtime",
        "storage": "Cloudflare R2 + Supabase Storage",
        "payments": "Stripe",
        "deployment": "Vercel"
      }
    },
    "key_features": [
      "Multi-role system (huurder, verhuurder, beheerder, beoordelaar)",
      "Property search and management",
      "Application system with status tracking",
      "Document verification and management",
      "Subscription-based pricing with Stripe integration",
      "Real-time notifications",
      "Profile management with image optimization",
      "Admin dashboard with user management",
      "Mobile-responsive design",
      "Multi-language support (Dutch primary)"
    ],
    "components": {
      "pages": [
        {
          "name": "Index",
          "path": "src/pages/Index.tsx",
          "description": "Main landing page with hero, features, and signup modals",
          "key_features": [
            "Hero section",
            "Multi-step signup",
            "Email verification",
            "Payment success handling"
          ]
        },
        {
          "name": "HuurderDashboard",
          "path": "src/pages/HuurderDashboard.tsx",
          "description": "Tenant dashboard with stats, applications, and profile management",
          "key_features": [
            "Dashboard stats",
            "Application tracking",
            "Document management",
            "Profile overview"
          ]
        },
        {
          "name": "VerhuurderDashboard",
          "path": "src/pages/VerhuurderDashboard.tsx",
          "description": "Landlord dashboard for property and application management",
          "key_features": [
            "Property management",
            "Application review",
            "Statistics overview"
          ]
        },
        {
          "name": "BeheerderDashboard",
          "path": "src/pages/BeheerderDashboard.tsx",
          "description": "Admin dashboard for user and system management",
          "key_features": [
            "User management",
            "System statistics",
            "Audit logs"
          ]
        },
        {
          "name": "BeoordelaarDashboard",
          "path": "src/pages/BeoordelaarDashboard.tsx",
          "description": "Reviewer dashboard for document verification",
          "key_features": [
            "Document queue",
            "Review modal",
            "Verification workflow"
          ]
        },
        {
          "name": "PropertyManagement",
          "path": "src/pages/PropertyManagement.tsx",
          "description": "Property management interface for landlords",
          "key_features": [
            "Property listing",
            "Property modal",
            "CRUD operations"
          ]
        }
      ],
      "modals": [
        {
          "name": "MultiStepSignupModal",
          "path": "src/components/modals/MultiStepSignupModal.tsx",
          "description": "Multi-step user registration with role selection and validation",
          "key_features": [
            "Role selection",
            "Form validation",
            "Password strength",
            "Email verification"
          ]
        },
        {
          "name": "EnhancedProfileCreationModal",
          "path": "src/components/modals/EnhancedProfileCreationModal.tsx",
          "description": "7-step profile creation with comprehensive validation",
          "key_features": [
            "Multi-step form",
            "Image upload",
            "Document upload",
            "Profile validation"
          ]
        },
        {
          "name": "BaseModal",
          "path": "src/components/modals/BaseModal.tsx",
          "description": "Reusable modal component with consistent styling and behavior",
          "key_features": [
            "Modal state management",
            "Accessibility",
            "Animation support"
          ]
        }
      ],
      "auth": [
        {
          "name": "withAuth",
          "path": "src/components/auth/withAuth.tsx",
          "description": "HOC for authentication and role-based access control",
          "key_features": [
            "Authentication check",
            "Role validation",
            "Loading states",
            "Access denied handling"
          ]
        }
      ],
      "ui": [
        {
          "name": "DashboardHeader",
          "path": "src/components/ui/DashboardHeader.tsx",
          "description": "Consistent header component for dashboard pages",
          "key_features": [
            "Navigation",
            "User menu",
            "Notifications"
          ]
        },
        {
          "name": "LoadingState",
          "path": "src/components/ui/LoadingState.tsx",
          "description": "Reusable loading component with consistent styling",
          "key_features": [
            "Loading spinner",
            "Loading text",
            "Skeleton states"
          ]
        }
      ]
    },
    "services": [
      {
        "name": "SearchService",
        "path": "src/services/SearchService.ts",
        "description": "Handles property search with filtering, pagination, and sorting",
        "key_methods": [
          "searchProperties",
          "applyFilters",
          "applySorting"
        ]
      },
      {
        "name": "ApplicationService",
        "path": "src/services/ApplicationService.ts",
        "description": "Manages rental applications with CRUD operations and notifications",
        "key_methods": [
          "createApplication",
          "getApplications",
          "updateApplicationStatus",
          "getApplicationStats"
        ]
      },
      {
        "name": "PropertyService",
        "path": "src/services/PropertyService.ts",
        "description": "Property management with search, filtering, and CRUD operations",
        "key_methods": [
          "searchProperties",
          "createProperty",
          "updateProperty",
          "deleteProperty"
        ]
      },
      {
        "name": "PaymentWebhookService",
        "path": "src/services/payment/PaymentWebhookService.ts",
        "description": "Handles Stripe payment webhooks and subscription activation",
        "key_methods": [
          "handlePaymentSuccess",
          "createAuditLog"
        ]
      },
      {
        "name": "StatisticsService",
        "path": "src/services/StatisticsService.ts",
        "description": "Provides dashboard statistics for properties and users",
        "key_methods": [
          "getPropertyStatistics",
          "getUserStatistics"
        ]
      },
      {
        "name": "BaseService",
        "path": "src/services/BaseService.ts",
        "description": "Base service class with common functionality and error handling",
        "key_methods": [
          "executeServiceOperation",
          "handleDatabaseError"
        ]
      }
    ],
    "hooks": [
      {
        "name": "useAuth",
        "path": "src/hooks/useAuth.ts",
        "description": "Authentication state and actions management",
        "key_features": [
          "Login/logout",
          "User state",
          "Role management",
          "Session handling"
        ]
      },
      {
        "name": "useModalManager",
        "path": "src/hooks/useModalManager.ts",
        "description": "Centralized modal state management with logging and callbacks",
        "key_features": [
          "Modal state",
          "Open/close actions",
          "Bulk operations",
          "Event callbacks"
        ]
      },
      {
        "name": "useRoleActions",
        "path": "src/hooks/useRoleActions.ts",
        "description": "Generic hook factory for role-based actions and navigation",
        "key_features": [
          "Role-specific actions",
          "Navigation helpers",
          "Modal management",
          "Logout handling"
        ]
      },
      {
        "name": "useHuurder",
        "path": "src/hooks/useHuurder.ts",
        "description": "Tenant-specific dashboard data and actions",
        "key_features": [
          "Dashboard stats",
          "Profile management",
          "Document handling",
          "Subscription status"
        ]
      },
      {
        "name": "useVerhuurderDashboard",
        "path": "src/hooks/useVerhuurderDashboard.ts",
        "description": "Landlord dashboard data management",
        "key_features": [
          "Property stats",
          "Application tracking",
          "Revenue analytics"
        ]
      },
      {
        "name": "useBeheerderDashboard",
        "path": "src/hooks/useBeheerderDashboard.ts",
        "description": "Admin dashboard data and user management",
        "key_features": [
          "User statistics",
          "System metrics",
          "User management"
        ]
      },
      {
        "name": "useHuurderActions",
        "path": "src/hooks/useHuurderActions.ts",
        "description": "Tenant-specific navigation and actions",
        "key_features": [
          "Application navigation",
          "Document management",
          "Profile actions"
        ]
      },
      {
        "name": "useVerhuurderActions",
        "path": "src/hooks/useVerhuurderActions.ts",
        "description": "Landlord-specific property and application actions",
        "key_features": [
          "Property management",
          "Application review",
          "Property CRUD"
        ]
      },
      {
        "name": "useBeheerderActions",
        "path": "src/hooks/useBeheerderActions.ts",
        "description": "Admin-specific system management actions",
        "key_features": [
          "User management",
          "System administration"
        ]
      }
    ],
    "utilities": [
      {
        "name": "ErrorHandler",
        "path": "src/lib/errors.ts",
        "description": "Comprehensive error handling with Dutch error messages",
        "key_features": [
          "Error normalization",
          "Database error handling",
          "User-friendly messages",
          "Error logging"
        ]
      },
      {
        "name": "ValidationUtils",
        "path": "src/utils/validationUtils.ts",
        "description": "Shared validation utilities with Dutch error messages",
        "key_features": [
          "Email validation",
          "Phone validation",
          "Postal code validation",
          "Password validation",
          "File validation"
        ]
      },
      {
        "name": "DatabaseService",
        "path": "src/lib/database.ts",
        "description": "Base database service with query execution and error handling",
        "key_features": [
          "Query execution",
          "Pagination",
          "Sorting",
          "Permission checking",
          "Audit logging"
        ]
      },
      {
        "name": "Logger",
        "path": "src/lib/logger.ts",
        "description": "Enhanced logging utilities for debugging and monitoring",
        "key_features": [
          "Console logging",
          "Error tracking",
          "Debug information"
        ]
      },
      {
        "name": "RoleUtils",
        "path": "src/utils/roleUtils.ts",
        "description": "Role-based access control utilities",
        "key_features": [
          "Role checking",
          "Permission validation",
          "Route protection"
        ]
      },
      {
        "name": "JWTUtils",
        "path": "src/lib/auth/jwtUtils.ts",
        "description": "JWT token handling and role extraction",
        "key_features": [
          "Role extraction",
          "Token validation",
          "Permission checking"
        ]
      },
      {
        "name": "LogoutUtils",
        "path": "src/lib/auth/logout.ts",
        "description": "Comprehensive logout handling with storage cleanup",
        "key_features": [
          "Session cleanup",
          "Storage clearing",
          "Cookie removal"
        ]
      }
    ],
    "types": [
      {
        "name": "User Types",
        "path": "src/types/index.ts",
        "description": "Core user and authentication types",
        "key_types": [
          "User",
          "UserRole",
          "TenantProfile",
          "Subscription"
        ]
      },
      {
        "name": "Document Types",
        "path": "src/types/documents.ts",
        "description": "Document management and validation types",
        "key_types": [
          "DocumentType",
          "DocumentStatus",
          "DocumentValidation"
        ]
      },
      {
        "name": "Application Types",
        "path": "src/domains/application/types/Application.ts",
        "description": "Application management and filtering types",
        "key_types": [
          "Application",
          "ApplicationStatus",
          "ApplicationSearchFilters"
        ]
      }
    ],
    "architecture_patterns": [
      "Domain-driven design with feature-based organization",
      "Service layer pattern for business logic",
      "Custom hooks pattern for state management",
      "HOC pattern for authentication and authorization",
      "Modal management pattern with centralized state",
      "Error boundary pattern for error handling",
      "Repository pattern for data access"
    ],
    "testing_considerations": {
      "critical_user_flows": [
        "User registration and email verification",
        "Profile creation and document upload",
        "Property search and filtering",
        "Application submission and tracking",
        "Payment processing and subscription activation",
        "Document verification workflow",
        "Role-based dashboard access",
        "Admin user management"
      ],
      "key_integrations": [
        "Supabase authentication",
        "Stripe payment processing",
        "Cloudflare R2 storage",
        "Email verification system",
        "Real-time notifications"
      ],
      "security_features": [
        "Role-based access control",
        "JWT token validation",
        "Input validation and sanitization",
        "File upload security",
        "Database permission checks"
      ]
    }
  }
}
